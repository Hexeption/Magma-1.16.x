--- a/net/minecraft/world/server/ChunkManager.java
+++ b/net/minecraft/world/server/ChunkManager.java
@@ -12,10 +_,10 @@
 import it.unimi.dsi.fastutil.longs.Long2ByteMap;
 import it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap;
 import it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap;
+import it.unimi.dsi.fastutil.longs.Long2ObjectMap.Entry;
 import it.unimi.dsi.fastutil.longs.LongIterator;
 import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
 import it.unimi.dsi.fastutil.longs.LongSet;
-import it.unimi.dsi.fastutil.longs.Long2ObjectMap.Entry;
 import java.io.File;
 import java.io.IOException;
 import java.io.Writer;
@@ -91,12 +_,14 @@
 import org.apache.commons.lang3.mutable.MutableBoolean;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.entity.NPC;
+import org.bukkit.entity.Player;
 
 public class ChunkManager extends ChunkLoader implements ChunkHolder.IPlayerProvider {
    private static final Logger field_219250_d = LogManager.getLogger();
    public static final int field_219249_a = 33 + ChunkStatus.func_222600_b();
    private final Long2ObjectLinkedOpenHashMap<ChunkHolder> field_219251_e = new Long2ObjectLinkedOpenHashMap<>();
-   private volatile Long2ObjectLinkedOpenHashMap<ChunkHolder> field_219252_f = this.field_219251_e.clone();
+   public volatile Long2ObjectLinkedOpenHashMap<ChunkHolder> field_219252_f = this.field_219251_e.clone(); // private->public CraftBukkit
    private final Long2ObjectLinkedOpenHashMap<ChunkHolder> field_219253_g = new Long2ObjectLinkedOpenHashMap<>();
    private final LongSet field_219254_h = new LongOpenHashSet();
    private final ServerWorld field_219255_i;
@@ -110,17 +_,39 @@
    private final ChunkTaskPriorityQueueSorter field_219263_q;
    private final ITaskExecutor<ChunkTaskPriorityQueueSorter.FunctionEntry<Runnable>> field_219264_r;
    private final ITaskExecutor<ChunkTaskPriorityQueueSorter.FunctionEntry<Runnable>> field_219265_s;
-   private final IChunkStatusListener field_219266_t;
-   private final ChunkManager.ProxyTicketManager field_219267_u;
+   public final IChunkStatusListener field_219266_t; // private->public CraftBukkit
+   public final ChunkManager.ProxyTicketManager field_219267_u; // private->public CraftBukkit
    private final AtomicInteger field_219268_v = new AtomicInteger();
    private final TemplateManager field_219269_w;
    private final File field_219270_x;
    private final PlayerGenerationTracker field_219271_y = new PlayerGenerationTracker();
-   private final Int2ObjectMap<ChunkManager.EntityTracker> field_219272_z = new Int2ObjectOpenHashMap<>();
+   public final Int2ObjectMap<ChunkManager.EntityTracker> field_219272_z = new Int2ObjectOpenHashMap<>(); // private->public CraftBukkit
    private final Long2ByteMap field_241087_z_ = new Long2ByteOpenHashMap();
    private final Queue<Runnable> field_223181_A = Queues.newConcurrentLinkedQueue();
    private int field_219247_A;
 
+   // CraftBukkit start - recursion-safe executor for Chunk loadCallback() and unloadCallback()
+   public final CallbackExecutor callbackExecutor = new CallbackExecutor();
+   public static final class CallbackExecutor implements java.util.concurrent.Executor, Runnable {
+      private Runnable queued;
+      @Override
+      public void execute(Runnable runnable) {
+         if (queued != null) {
+            throw new IllegalStateException("Already queued");
+         }
+         queued = runnable;
+      }
+      @Override
+      public void run() {
+         Runnable task = queued;
+         queued = null;
+         if (task != null) {
+            task.run();
+         }
+      }
+   };
+   // CraftBukkit end
+
    public ChunkManager(ServerWorld p_i232602_1_, SaveFormat.LevelSave p_i232602_2_, DataFixer p_i232602_3_, TemplateManager p_i232602_4_, Executor p_i232602_5_, ThreadTaskExecutor<Runnable> p_i232602_6_, IChunkLightProvider p_i232602_7_, ChunkGenerator p_i232602_8_, IChunkStatusListener p_i232602_9_, Supplier<DimensionSavedDataManager> p_i232602_10_, int p_i232602_11_, boolean p_i232602_12_) {
       super(new File(p_i232602_2_.func_237291_a_(p_i232602_1_.func_234923_W_()), "region"), p_i232602_3_, p_i232602_12_);
       this.field_219269_w = p_i232602_4_;
@@ -357,6 +_,8 @@
 
    }
 
+   private static final double UNLOAD_QUEUE_RESIZE_FACTOR = 0.96; // Spigot
+
    protected void func_219204_a(BooleanSupplier p_219204_1_) {
       IProfiler iprofiler = this.field_219255_i.func_217381_Z();
       iprofiler.func_76320_a("poi");
@@ -372,16 +_,27 @@
    private void func_223155_b(BooleanSupplier p_223155_1_) {
       LongIterator longiterator = this.field_219261_o.iterator();
 
-      for(int i = 0; longiterator.hasNext() && (p_223155_1_.getAsBoolean() || i < 200 || this.field_219261_o.size() > 2000); longiterator.remove()) {
+      // Spigot start
+      org.spigotmc.SlackActivityAccountant activityAccountant = this.field_219255_i.func_73046_m().slackActivityAccountant;
+      activityAccountant.startActivity(0.5);
+      int targetSize = (int) (this.field_219261_o.size() * UNLOAD_QUEUE_RESIZE_FACTOR);
+      // Spigot end
+      while (longiterator.hasNext()) { // Spigot
          long j = longiterator.nextLong();
+         longiterator.remove(); // Spigot
          ChunkHolder chunkholder = this.field_219251_e.remove(j);
          if (chunkholder != null) {
             this.field_219253_g.put(j, chunkholder);
             this.field_219262_p = true;
-            ++i;
+            // Spigot start
+            if (!p_223155_1_.getAsBoolean() && this.field_219261_o.size() <= targetSize && activityAccountant.activityTimeIsExhausted()) {
+               break;
+            }
+            // Spigot end
             this.func_219212_a(j, chunkholder);
          }
       }
+      activityAccountant.endActivity(); // Spigot
 
       Runnable runnable;
       while((p_223155_1_.getAsBoolean() || this.field_223181_A.size() > 2000) && (runnable = this.field_223181_A.poll()) != null) {
@@ -400,6 +_,7 @@
             if (this.field_219253_g.remove(p_219212_1_, p_219212_3_) && p_219185_5_ != null) {
                if (p_219185_5_ instanceof Chunk) {
                   ((Chunk)p_219185_5_).func_177417_c(false);
+                  net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Unload((Chunk)p_219185_5_));
                }
 
                this.func_219229_a(p_219185_5_);
@@ -601,6 +_,7 @@
                if (list != null) {
                   list.forEach(chunk::func_76622_b);
                }
+               net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Load(chunk));
             }
 
             return chunk;
@@ -678,6 +_,7 @@
 
             this.field_219255_i.func_217381_Z().func_230035_c_("chunkSave");
             CompoundNBT compoundnbt = ChunkSerializer.func_222645_a(this.field_219255_i, p_219229_1_);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Save(p_219229_1_, p_219229_1_.getWorldForge() != null ? p_219229_1_.getWorldForge() : this.field_219255_i, compoundnbt));
             this.func_219100_a(chunkpos, compoundnbt);
             this.func_241088_a_(chunkpos, chunkstatus.func_202129_d());
             return true;
@@ -734,6 +_,7 @@
 
    protected void func_219199_a(ServerPlayerEntity p_219199_1_, ChunkPos p_219199_2_, IPacket<?>[] p_219199_3_, boolean p_219199_4_, boolean p_219199_5_) {
       if (p_219199_1_.field_70170_p == this.field_219255_i) {
+         net.minecraftforge.event.ForgeEventFactory.fireChunkWatch(p_219199_4_, p_219199_5_, p_219199_1_, p_219199_2_, this.field_219255_i);
          if (p_219199_5_ && !p_219199_4_) {
             ChunkHolder chunkholder = this.func_219219_b(p_219199_2_.func_201841_a());
             if (chunkholder != null) {
@@ -800,15 +_,26 @@
    }
 
    @Nullable
-   private CompoundNBT func_219178_f(ChunkPos p_219178_1_) throws IOException {
+   public CompoundNBT func_219178_f(ChunkPos p_219178_1_) throws IOException {
       CompoundNBT compoundnbt = this.func_227078_e_(p_219178_1_);
       return compoundnbt == null ? null : this.func_235968_a_(this.field_219255_i.func_234923_W_(), this.field_219259_m, compoundnbt);
    }
 
    boolean func_219243_d(ChunkPos p_219243_1_) {
-      long i = p_219243_1_.func_201841_a();
+      // Spigot start
+      return isOutsideOfRange(p_219243_1_, false);
+   }
+
+   boolean isOutsideOfRange(ChunkPos chunkPosIn, boolean reducedRange) {
+      int chunkRange = field_219255_i.spigotConfig.mobSpawnRange;
+      chunkRange = (chunkRange > field_219255_i.spigotConfig.viewDistance) ? (byte) field_219255_i.spigotConfig.viewDistance : chunkRange;
+      chunkRange = (chunkRange > 8) ? 8 : chunkRange;
+      double blockRange = (reducedRange) ? Math.pow(chunkRange << 4, 2) : 16384.0D;
+      // Spigot end
+
+      long i = chunkPosIn.func_201841_a();
       return !this.field_219267_u.func_223494_d(i) ? true : this.field_219271_y.func_219444_a(i).noneMatch((p_219201_1_) -> {
-         return !p_219201_1_.func_175149_v() && func_219217_a(p_219243_1_, p_219201_1_) < 16384.0D;
+         return !p_219201_1_.func_175149_v() && func_219217_a(chunkPosIn, p_219201_1_) < blockRange; // Spigot
       });
    }
 
@@ -942,9 +_,11 @@
    }
 
    protected void func_219210_a(Entity p_219210_1_) {
-      if (!(p_219210_1_ instanceof EnderDragonPartEntity)) {
+      org.spigotmc.AsyncCatcher.catchOp("entity track"); // Spigot
+      if (!(p_219210_1_ instanceof net.minecraftforge.entity.PartEntity)) {
          EntityType<?> entitytype = p_219210_1_.func_200600_R();
          int i = entitytype.func_233602_m_() * 16;
+         i = org.spigotmc.TrackingRange.getEntityTrackingRange(p_219210_1_, i); // Spigot
          int j = entitytype.func_220332_l();
          if (this.field_219272_z.containsKey(p_219210_1_.func_145782_y())) {
             throw (IllegalStateException)Util.func_229757_c_(new IllegalStateException("Entity is already tracked!"));
@@ -968,6 +_,7 @@
    }
 
    protected void func_219231_b(Entity p_219231_1_) {
+      org.spigotmc.AsyncCatcher.catchOp("entity untrack"); // Spigot
       if (p_219231_1_ instanceof ServerPlayerEntity) {
          ServerPlayerEntity serverplayerentity = (ServerPlayerEntity)p_219231_1_;
          this.func_219234_a(serverplayerentity, false);
@@ -1077,15 +_,15 @@
       });
    }
 
-   class EntityTracker {
+   public class EntityTracker {
       private final TrackedEntity field_219402_b;
       private final Entity field_219403_c;
       private final int field_219404_d;
       private SectionPos field_219405_e;
-      private final Set<ServerPlayerEntity> field_219406_f = Sets.newHashSet();
+      public final Set<ServerPlayerEntity> field_219406_f = Sets.newHashSet(); // private->public CraftBukkit
 
       public EntityTracker(Entity p_i50468_2_, int p_i50468_3_, int p_i50468_4_, boolean p_i50468_5_) {
-         this.field_219402_b = new TrackedEntity(ChunkManager.this.field_219255_i, p_i50468_2_, p_i50468_4_, p_i50468_5_, this::func_219391_a);
+         this.field_219402_b = new TrackedEntity(ChunkManager.this.field_219255_i, p_i50468_2_, p_i50468_4_, p_i50468_5_, this::func_219391_a, field_219406_f); // CraftBukkit
          this.field_219403_c = p_i50468_2_;
          this.field_219404_d = p_i50468_3_;
          this.field_219405_e = SectionPos.func_218157_a(p_i50468_2_);
@@ -1126,6 +_,7 @@
       }
 
       public void func_219399_a(ServerPlayerEntity p_219399_1_) {
+         org.spigotmc.AsyncCatcher.catchOp("player tracker clear"); // Spigot
          if (this.field_219406_f.remove(p_219399_1_)) {
             this.field_219402_b.func_219454_a(p_219399_1_);
          }
@@ -1133,8 +_,9 @@
       }
 
       public void func_219400_b(ServerPlayerEntity p_219400_1_) {
+         org.spigotmc.AsyncCatcher.catchOp("player tracker update"); // Spigot
          if (p_219400_1_ != this.field_219403_c) {
-            Vector3d vector3d = p_219400_1_.func_213303_ch().func_178788_d(this.field_219402_b.func_219456_b());
+            Vector3d vector3d = p_219400_1_.func_213303_ch().func_178788_d(this.field_219403_c.func_213303_ch());  // MC-155077, SPIGOT-5113
             int i = Math.min(this.func_229843_b_(), (ChunkManager.this.field_219247_A - 1) * 16);
             boolean flag = vector3d.field_72450_a >= (double)(-i) && vector3d.field_72450_a <= (double)i && vector3d.field_72449_c >= (double)(-i) && vector3d.field_72449_c <= (double)i && this.field_219403_c.func_174827_a(p_219400_1_);
             if (flag) {
@@ -1146,6 +_,16 @@
                      flag1 = ChunkManager.func_219215_b(chunkpos, p_219400_1_, false) <= ChunkManager.this.field_219247_A;
                   }
                }
+
+               // CraftBukkit start - respect vanish API
+               if (this.field_219403_c instanceof ServerPlayerEntity) {
+                  Player craftPlayer = ((ServerPlayerEntity) this.field_219403_c).getBukkitEntity();
+                  if (!p_219400_1_.getBukkitEntity().canSee(craftPlayer)) {
+                     flag1 = false;
+                  }
+               }
+               p_219400_1_.field_71130_g.remove(Integer.valueOf(this.field_219403_c.func_145782_y()));
+               // CraftBukkit end
 
                if (flag1 && this.field_219406_f.add(p_219400_1_)) {
                   this.field_219402_b.func_219455_b(p_219400_1_);
