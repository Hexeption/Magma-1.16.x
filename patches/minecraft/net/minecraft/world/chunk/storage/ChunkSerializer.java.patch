--- a/net/minecraft/world/chunk/storage/ChunkSerializer.java
+++ b/net/minecraft/world/chunk/storage/ChunkSerializer.java
@@ -1,23 +_,29 @@
 package net.minecraft.world.chunk.storage;
 
-import com.google.common.collect.Maps;
-import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
-import it.unimi.dsi.fastutil.longs.LongSet;
-import it.unimi.dsi.fastutil.shorts.ShortList;
 import java.util.Arrays;
 import java.util.BitSet;
 import java.util.EnumSet;
 import java.util.Locale;
 import java.util.Map;
-import java.util.Objects;
 import java.util.Map.Entry;
+import java.util.Objects;
+
 import javax.annotation.Nullable;
+
+import com.google.common.collect.Maps;
+import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
+import it.unimi.dsi.fastutil.longs.LongSet;
+import it.unimi.dsi.fastutil.shorts.ShortList;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
 import net.minecraft.block.Block;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
 import net.minecraft.fluid.Fluid;
 import net.minecraft.fluid.Fluids;
 import net.minecraft.nbt.CompoundNBT;
+import net.minecraft.nbt.INBT;
 import net.minecraft.nbt.ListNBT;
 import net.minecraft.nbt.LongArrayNBT;
 import net.minecraft.nbt.ShortNBT;
@@ -52,8 +_,6 @@
 import net.minecraft.world.gen.feature.template.TemplateManager;
 import net.minecraft.world.lighting.WorldLightManager;
 import net.minecraft.world.server.ServerWorld;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
 
 public class ChunkSerializer {
    private static final Logger field_222658_a = LogManager.getLogger();
@@ -131,7 +_,14 @@
 
          ichunk = new Chunk(p_222656_0_.func_201672_e(), p_222656_3_, biomecontainer, upgradedata, iticklist, iticklist1, k1, achunksection, (p_222648_1_) -> {
             func_222650_a(compoundnbt, p_222648_1_);
+            // CraftBukkit start - load chunk persistent data from nbt
+            INBT persistentBase = compoundnbt.func_74781_a("ChunkBukkitValues");
+            if (persistentBase instanceof CompoundNBT) {
+               p_222648_1_.persistentDataContainer.putAll((CompoundNBT) persistentBase);
+            }
+            // CraftBukkit end
          });
+         if (compoundnbt.func_74764_b("ForgeCaps")) ((Chunk)ichunk).readCapsFromNBT(compoundnbt.func_74775_l("ForgeCaps"));
       } else {
          ChunkPrimer chunkprimer = new ChunkPrimer(p_222656_3_, upgradedata, achunksection, chunkprimerticklist, chunkprimerticklist1);
          chunkprimer.func_225548_a_(biomecontainer);
@@ -144,7 +_,7 @@
 
          if (!flag && chunkprimer.func_201589_g().func_209003_a(ChunkStatus.field_222614_j)) {
             for(BlockPos blockpos : BlockPos.func_191531_b(p_222656_3_.func_180334_c(), 0, p_222656_3_.func_180333_d(), p_222656_3_.func_180332_e(), 255, p_222656_3_.func_180330_f())) {
-               if (ichunk.func_180495_p(blockpos).func_185906_d() != 0) {
+               if (ichunk.func_180495_p(blockpos).getLightValue(ichunk, blockpos) != 0) {
                   chunkprimer.func_201637_h(blockpos);
                }
             }
@@ -167,7 +_,7 @@
       Heightmap.func_222690_a(ichunk, enumset);
       CompoundNBT compoundnbt4 = compoundnbt.func_74775_l("Structures");
       ichunk.func_201612_a(func_235967_a_(p_222656_1_, compoundnbt4, p_222656_0_.func_72905_C()));
-      ichunk.func_201606_b(func_227075_a_(p_222656_3_, compoundnbt4));
+      net.minecraftforge.common.ForgeHooks.fixNullStructureReferences(ichunk, func_227075_a_(p_222656_3_, compoundnbt4));
       if (compoundnbt.func_74767_n("shouldSave")) {
          ichunk.func_177427_f(true);
       }
@@ -183,6 +_,7 @@
       }
 
       if (chunkstatus$type == ChunkStatus.Type.LEVELCHUNK) {
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Load(ichunk, p_222656_4_, chunkstatus$type));
          return new ChunkPrimerWrapper((Chunk)ichunk);
       } else {
          ChunkPrimer chunkprimer1 = (ChunkPrimer)ichunk;
@@ -216,6 +_,8 @@
             chunkprimer1.func_205767_a(generationstage$carving, BitSet.valueOf(compoundnbt5.func_74770_j(s1)));
          }
 
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Load(ichunk, p_222656_4_, chunkstatus$type));
+
          return chunkprimer1;
       }
    }
@@ -290,16 +_,33 @@
       ListNBT listnbt2 = new ListNBT();
       if (p_222645_1_.func_201589_g().func_202129_d() == ChunkStatus.Type.LEVELCHUNK) {
          Chunk chunk = (Chunk)p_222645_1_;
+
+         // CraftBukkit start - store chunk persistent data in nbt
+         if (!chunk.persistentDataContainer.isEmpty()) {
+            compoundnbt1.func_218657_a("ChunkBukkitValues", chunk.persistentDataContainer.toTagCompound());
+         }
+         // CraftBukkit end
+
          chunk.func_177409_g(false);
 
          for(int k = 0; k < chunk.func_177429_s().length; ++k) {
             for(Entity entity : chunk.func_177429_s()[k]) {
                CompoundNBT compoundnbt3 = new CompoundNBT();
+               try {
                if (entity.func_70039_c(compoundnbt3)) {
                   chunk.func_177409_g(true);
                   listnbt2.add(compoundnbt3);
                }
+               } catch (Exception e) {
+                  LogManager.getLogger().error("An Entity type {} has thrown an exception trying to write state. It will not persist. Report this to the mod author", entity.func_200600_R(), e);
+               }
             }
+         }
+         try {
+             final CompoundNBT capTag = chunk.writeCapsToNBT();
+             if (capTag != null) compoundnbt1.func_218657_a("ForgeCaps", capTag);
+         } catch (Exception exception) {
+             LogManager.getLogger().error("A capability provider has thrown an exception trying to write state. It will not persist. Report this to the mod author", exception);
          }
       } else {
          ChunkPrimer chunkprimer = (ChunkPrimer)p_222645_1_;
@@ -364,6 +_,7 @@
    private static void func_222650_a(CompoundNBT p_222650_0_, Chunk p_222650_1_) {
       ListNBT listnbt = p_222650_0_.func_150295_c("Entities", 10);
       World world = p_222650_1_.func_177412_p();
+      world.timings.syncChunkLoadEntitiesTimer.startTiming(); // Spigot
 
       for(int i = 0; i < listnbt.size(); ++i) {
          CompoundNBT compoundnbt = listnbt.func_150305_b(i);
@@ -374,6 +_,8 @@
          p_222650_1_.func_177409_g(true);
       }
 
+      world.timings.syncChunkLoadEntitiesTimer.stopTiming(); // Spigot
+      world.timings.syncChunkLoadTileEntitiesTimer.startTiming(); // Spigot
       ListNBT listnbt1 = p_222650_0_.func_150295_c("TileEntities", 10);
 
       for(int j = 0; j < listnbt1.size(); ++j) {
@@ -389,6 +_,7 @@
             }
          }
       }
+      world.timings.syncChunkLoadTileEntitiesTimer.stopTiming(); // Spigot
 
    }
 
